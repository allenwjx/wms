/**
 * Jungle.com Inc.
 * Copyright (c) 2004-2018 All Rights Reserved.
 */ 
package com.zeh.wms.dal.ibatis;

import com.zeh.wms.dal.operation.userexpressdiscount.*;
import com.zeh.wms.dal.dataobject.*;


import java.io.*;
import java.net.*;
import java.util.*;

import java.math.BigDecimal;
import java.math.BigInteger;

import com.zeh.jungle.dal.paginator.PageQuery;
import com.zeh.jungle.dal.paginator.PageList;
import com.zeh.jungle.dal.paginator.PageQueryUtils;
import org.springframework.dao.DataAccessException;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.zeh.wms.dal.dataobject.UserExpressDiscountDO;
import com.zeh.wms.dal.daointerface.UserExpressDiscountDAO;

/**
 * UserExpressDiscountDAO
 * database table: user_express_discount
 * database table comments: UserExpressDiscount
 * This file is generated by <tt>dalgen</tt>, a DAL (Data Access Layer)
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/dalgen</tt>
 * 
 * @author Allen Wang(Wang Junxiang)
 * */
public class IbatisUserExpressDiscountDAO extends SqlMapClientDaoSupport implements UserExpressDiscountDAO {


	/**
	 * 
	 * sql: 
	 * <pre>INSERT      INTO         user_express_discount         (    user_id, express_code, discount, gmt_create, gmt_modified, create_by, modify_by    )      VALUES         (?,?,?,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP,?,?)</pre>
	 */
	public long insert(UserExpressDiscountDO userExpressDiscount) throws DataAccessException {
		if(userExpressDiscount == null) {
			throw new IllegalArgumentException("Can't insert a null data object into db.");
		}
		getSqlMapClientTemplate().insert("wms.UserExpressDiscount.insert", userExpressDiscount);
		return userExpressDiscount.getId();
	}

	/**
	 * 
	 * sql: 
	 * <pre>DELETE      FROM         user_express_discount      WHERE         id = ?</pre>
	 */
	public int delete(Long id) throws DataAccessException {
		return getSqlMapClientTemplate().delete("wms.UserExpressDiscount.delete", id);
	}

	/**
	 * 
	 * sql: 
	 * <pre>UPDATE         user_express_discount      SET         user_id = ? , express_code = ?, gmt_modified = CURRENT_TIMESTAMP , modify_by = ?               WHERE         id = ?</pre>
	 */
	public int update(UserExpressDiscountDO userExpressDiscount) throws DataAccessException {
		if(userExpressDiscount == null) {
			throw new IllegalArgumentException("Can't update by a null data object.");
		}
		return getSqlMapClientTemplate().update("wms.UserExpressDiscount.update", userExpressDiscount);
	}

	/**
	 * 
	 * sql: 
	 * <pre>SELECT         id, user_id, express_code, discount, gmt_create, gmt_modified, create_by, modify_by                 FROM         user_express_discount               WHERE         id = ?</pre>
	 */
	public UserExpressDiscountDO queryById(Long id) throws DataAccessException {
		return (UserExpressDiscountDO)getSqlMapClientTemplate().queryForObject("wms.UserExpressDiscount.queryById",id);
	}

	/**
	 * 
	 * sql: 
	 * <pre>SELECT         id, user_id, express_code, discount, gmt_create, gmt_modified, create_by, modify_by           FROM         user_express_discount         WHERE         1=1                   AND       user_id = ?                     AND       express_code = ?</pre>
	 */
	public List<UserExpressDiscountDO> queryByPar(QueryByParQuery param) throws DataAccessException {
		return (List<UserExpressDiscountDO>)getSqlMapClientTemplate().queryForList("wms.UserExpressDiscount.queryByPar",param);
	}

}

