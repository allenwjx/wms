/**
 * Jungle.com Inc.
 * Copyright (c) 2004-2018 All Rights Reserved.
 */ 
package com.zeh.wms.dal.ibatis;

import com.zeh.wms.dal.operation.agent.*;
import com.zeh.wms.dal.dataobject.*;


import java.io.*;
import java.net.*;
import java.util.*;

import java.math.BigDecimal;
import java.math.BigInteger;

import com.zeh.jungle.dal.paginator.PageQuery;
import com.zeh.jungle.dal.paginator.PageList;
import com.zeh.jungle.dal.paginator.PageQueryUtils;
import org.springframework.dao.DataAccessException;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.zeh.wms.dal.dataobject.AgentDO;
import com.zeh.wms.dal.daointerface.AgentDAO;

/**
 * AgentDAO
 * database table: agent
 * database table comments: Agent
 * This file is generated by <tt>dalgen</tt>, a DAL (Data Access Layer)
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/dalgen</tt>
 * 
 * @author Allen Wang(Wang Junxiang)
 * */
public class IbatisAgentDAO extends SqlMapClientDaoSupport implements AgentDAO {


	/**
	 * 
	 * sql: 
	 * <pre>INSERT      INTO         agent         (           id ,code ,external_code ,name ,mobile ,address           )      VALUES         (?,?,?,?,?,?)</pre>
	 */
	public long insert(AgentDO agent) throws DataAccessException {
		if(agent == null) {
			throw new IllegalArgumentException("Can't insert a null data object into db.");
		}
		getSqlMapClientTemplate().insert("wms.Agent.insert", agent);
		return agent.getId();
	}

	/**
	 * 
	 * sql: 
	 * <pre>DELETE      FROM         agent      WHERE         id = ?</pre>
	 */
	public int delete(Long id) throws DataAccessException {
		return getSqlMapClientTemplate().delete("wms.Agent.delete", id);
	}

	/**
	 * 
	 * sql: 
	 * <pre>UPDATE         agent      SET         code = ? ,external_code = ? ,name = ? ,mobile = ? ,address = ?                WHERE         id = ?</pre>
	 */
	public int update(AgentDO agent) throws DataAccessException {
		if(agent == null) {
			throw new IllegalArgumentException("Can't update by a null data object.");
		}
		return getSqlMapClientTemplate().update("wms.Agent.update", agent);
	}

	/**
	 * 
	 * sql: 
	 * <pre>SELECT         id, code, external_code, name, mobile, address                  FROM         agent                WHERE         id = ?</pre>
	 */
	public AgentDO queryById(Long id) throws DataAccessException {
		return (AgentDO)getSqlMapClientTemplate().queryForObject("wms.Agent.queryById",id);
	}

	/**
	 * 
	 * sql: 
	 * <pre>SELECT         id, code, external_code, name, mobile, address            FROM         agent</pre>
	 */
	public PageList<AgentDO> findPage(int pageSize,int pageNum) throws DataAccessException {
		return PageQueryUtils.pageQuery(getSqlMapClientTemplate(),"wms.Agent.findPage",null,pageNum,pageSize);
	}

}

